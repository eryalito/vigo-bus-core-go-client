/*
Vigo Bus Core API

Testing BusAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/eryalito/vigo-bus-core-go-client"
)

func Test_openapi_BusAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test BusAPIService ApiLinesGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.BusAPI.ApiLinesGet(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BusAPIService ApiStopsFindGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.BusAPI.ApiStopsFindGet(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BusAPIService ApiStopsFindLocationGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.BusAPI.ApiStopsFindLocationGet(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BusAPIService ApiStopsGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.BusAPI.ApiStopsGet(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BusAPIService ApiStopsStopNumberGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var stopNumber int32

		resp, httpRes, err := apiClient.BusAPI.ApiStopsStopNumberGet(context.Background(), stopNumber).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BusAPIService ApiStopsStopNumberScheduleGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var stopNumber int32

		resp, httpRes, err := apiClient.BusAPI.ApiStopsStopNumberScheduleGet(context.Background(), stopNumber).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
