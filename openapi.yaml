openapi: 3.0.0
info:
  contact: {}
  description: This is the API for the Vigo Bus Core project.
  title: Vigo Bus Core API
  version: "1.0"
paths:
  /api/lines:
    get:
      description: Provide a list of all the lines
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/api.Line"
                type: array
      summary: List all of the lines
      tags:
        - Bus
  /api/stops:
    get:
      description: Provide a list of all the stops
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/api.Stop"
                type: array
      summary: List all of the stops
      tags:
        - Bus
  "/api/stops/{stop_number}":
    get:
      description: Provide a stop by its number
      parameters:
        - description: Stop Number
          in: path
          name: stop_number
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.Stop"
      summary: Get a stop by its number
      tags:
        - Bus
  "/api/stops/{stop_number}/schedule":
    get:
      description: Provide the schedule for a stop
      parameters:
        - description: Stop Number
          in: path
          name: stop_number
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/api.StopSchedule"
                type: array
      summary: Get the schedule for a stop
      tags:
        - Bus
  /api/stops/find:
    get:
      description: Provide a list of stops that match the text in their name
      parameters:
        - description: Text to search for in stop name
          in: query
          name: text
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/api.Stop"
                type: array
      summary: Find a stop by text in its name
      tags:
        - Bus
  /api/stops/find/location:
    get:
      description: Provide a list of stops in a given radius around a location
      parameters:
        - description: Latitude
          in: query
          name: lat
          required: true
          schema:
            type: number
        - description: Longitude
          in: query
          name: lon
          required: true
          schema:
            type: number
        - description: Radius in meters
          in: query
          name: radius
          required: true
          schema:
            type: number
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/api.Stop"
                type: array
      summary: Find a stop by its location
      tags:
        - Bus
  "/api/users/{provider}/{uuid}":
    get:
      description: Provide a user by its UUID for a specific provider
      parameters:
        - description: Provider
          in: path
          name: provider
          required: true
          schema:
            type: string
        - description: UUID
          in: path
          name: uuid
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.Identity"
      summary: Get a user by its UUID for a specific provider
      tags:
        - Identity
    post:
      description: Create a new user
      parameters:
        - description: Provider
          in: path
          name: provider
          required: true
          schema:
            type: string
        - description: UUID
          in: path
          name: uuid
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.Identity"
      summary: Create a new user
      tags:
        - Identity
  "/api/users/{provider}/{uuid}/favorite_stops/{stop_number}":
    delete:
      description: Remove a favorite stop from a user
      parameters:
        - description: Provider
          in: path
          name: provider
          required: true
          schema:
            type: string
        - description: UUID
          in: path
          name: uuid
          required: true
          schema:
            type: string
        - description: Stop Number
          in: path
          name: stop_number
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.Identity"
      summary: Remove a favorite stop from a user
      tags:
        - Identity
    post:
      description: Add a favorite stop to a user
      parameters:
        - description: Provider
          in: path
          name: provider
          required: true
          schema:
            type: string
        - description: UUID
          in: path
          name: uuid
          required: true
          schema:
            type: string
        - description: Stop Number
          in: path
          name: stop_number
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.Identity"
      summary: Add a favorite stop to a user
      tags:
        - Identity
security:
  - BearerAuth: []
servers:
  - url: //localhost:8080
components:
  securitySchemes:
    BearerAuth:
      description: "\"Type 'Bearer' followed by a space and then your token.\""
      in: header
      name: Authorization
      type: apiKey
  schemas:
    api.Identity:
      properties:
        favorite_stops:
          description: FavoriteStops is a list of the user's favorite stops
          items:
            $ref: "#/components/schemas/api.Stop"
          type: array
        id:
          description: ID is the unique identifier of the identity
          type: integer
        provider:
          allOf:
            - $ref: "#/components/schemas/api.ProviderType"
          description: Provider is the type of the identity provider
        uuid:
          description: UUID is the unique identifier of the identity, usually provided by
            the auth provider
          type: string
      type: object
    api.Line:
      properties:
        id:
          description: ID is the unique identifier of the line
          type: integer
        name:
          description: Name is the name of the line provided by the bus company
          type: string
      type: object
    api.ProviderType:
      enum:
        - telegram
      type: string
      x-enum-varnames:
        - ProviderTypeTelegram
    api.Schedule:
      properties:
        line:
          allOf:
            - $ref: "#/components/schemas/api.Line"
          description: Line is the line that the schedule is for
        route:
          description: Route is the route that the schedule is for
          type: string
        time:
          description: Time is the time of the schedule
          type: integer
      type: object
    api.Stop:
      properties:
        id:
          description: ID is the unique identifier of the stop
          type: integer
        location:
          description: Location is the geographical location of the stop
          properties:
            lat:
              description: Lat is the latitude of the stop
              type: number
            lon:
              description: Lon is the longitude of the stop
              type: number
          type: object
        name:
          description: Name is the name of the stop
          type: string
        stop_id:
          description: StopID is the number of the stop used internally by the bus company
          type: integer
        stop_number:
          description: StopNumber is the number of the stop provided by the bus company
          type: integer
      type: object
    api.StopSchedule:
      properties:
        schedules:
          description: Schedules is a list of the schedules for the stop
          items:
            $ref: "#/components/schemas/api.Schedule"
          type: array
        stop:
          allOf:
            - $ref: "#/components/schemas/api.Stop"
          description: Stop is the stop that the schedule is for
      type: object
